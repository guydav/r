which(summary(whatif(data=peace.df.minimal.raw[1:i,], cfact=peace.df.minimal.raw[1:i,]))$sum.df$in.hull == FALSE)
data=peace.df.minimal.raw[1:i,]
peace.df.minimal.raw[1:i,]
i <- 20
which(summary(whatif(data=peace.df.minimal.raw[1:i,], cfact=peace.df.minimal.raw[1:i,]))$sum.df$in.hull == FALSE)
i <- 40
which(summary(whatif(data=peace.df.minimal.raw[1:i,], cfact=peace.df.minimal.raw[1:i,]))$sum.df$in.hull == FALSE)
i <- 60
which(summary(whatif(data=peace.df.minimal.raw[1:i,], cfact=peace.df.minimal.raw[1:i,]))$sum.df$in.hull == FALSE)
i <- 80
which(summary(whatif(data=peace.df.minimal.raw[1:i,], cfact=peace.df.minimal.raw[1:i,]))$sum.df$in.hull == FALSE)
i <- 100
which(summary(whatif(data=peace.df.minimal.raw[1:i,], cfact=peace.df.minimal.raw[1:i,]))$sum.df$in.hull == FALSE)
i <- 119
which(summary(whatif(data=peace.df.minimal.raw[1:i,], cfact=peace.df.minimal.raw[1:i,]))$sum.df$in.hull == FALSE)
?whatif
discrimination.df <- read.dta('./../13.2/discrimination/mazedata1.dta')
sapply(discrimination.df, summary)
View(discrimination.df)
disc.train.indices <- sample(1:nrow(discrimination.df), nrow(discrimination.df) / 2, replace = FALSE)
library(tree)
tree.disc <- tree(caste ~ . - treatment, discrimination.df, subset = disc.train.indices)
tree.disc <- tree(caste ~ . - treatment, data = discrimination.df, subset = disc.train.indices)
tree.disc <- tree(caste ~ . - treatment, data = discrimination.df)
tree.carseats <- tree(High ~ . - Sales, Carseats, subset = train.indices)
attach(Carseats)
High <- ifelse(Sales <= 8, "No", "Yes")
Carseats <- data.frame(Carseats, High)
# Construct a tree over the entire data set
tree.carseats <- tree(High ~ . - Sales, Carseats)
summary(tree.carseats)
plot(tree.carseats)
text(tree.carseats, cex = 0.5)
# Construct one over a training set, test over a test set
set.seed(2)
train.indices <- sample(1:nrow(Carseats), 200)
Carseats.train <- Carseats[train.indices,]
Carseats.test <- Carseats[-train.indices,]
High.test <- High[-train.indices]
tree.carseats <- tree(High ~ . - Sales, Carseats, subset = train.indices)
tree.pred <- predict(tree.carseats, Carseats.test, type = 'class')
table(tree.pred, High.test)
library(tree)
library(ISLR)
attach(Carseats)
High <- ifelse(Sales <= 8, "No", "Yes")
Carseats <- data.frame(Carseats, High)
tree.carseats <- tree(High ~ . - Sales, Carseats)
summary(tree.carseats)
plot(tree.carseats)
text(tree.carseats, cex = 0.5)
tree.disc <- tree(caste ~ . - treatment, data = discrimination.df) #, subset = disc.train.indices)
attach(discrimination.df)
tree.disc <- tree(caste ~ . - treatment, discrimination.df) #, subset = disc.train.indices)
disc.no.na <- omit.na(discrimination.df)
disc.no.na <- na.omit(discrimination.df)
nrow(discrimination.df) - nrow(disc.no.na)
nrow(disc.no.na)
tree.disc <- tree(caste ~ treatment + roun1 + round2, discrimination.df) #, subset = disc.train.indices)
tree.disc <- tree(caste ~ treatment + round1 + round2, discrimination.df) #, subset = disc.train.indices)
tree.disc <- tree(caste ~ seenmaze + knowkids + read + mothedu + fathedu + land, discrimination.df) #, subset = disc.train.indices)
tree.disc
summary(tree.disc)
tree.disc <- tree(caste ~ seenmaze + knowkids + read + land, discrimination.df) #, subset = disc.train.indices)
tree.disc
discrimination.df <- read.dta('./../13.2/discrimination/mazedata1.dta')
discrimination.df$caste <- as.factor(discrimination.df$caste)
disc.train.indices <- sample(1:nrow(discrimination.df), nrow(discrimination.df) / 2, replace = FALSE)
tree.disc <- tree(caste ~ seenmaze + knowkids + read + land, discrimination.df) #, subset = disc.train.indices)
discrimination.df <- read.dta('./../13.2/discrimination/mazedata1.dta')
discrimination.df$caste <- as.factor(discrimination.df$caste)
disc.train.indices <- sample(1:nrow(discrimination.df), nrow(discrimination.df) / 2, replace = FALSE)
tree.disc <- tree(caste ~ seenmaze + knowkids + read + land, discrimination.df, subset = disc.train.indices)
plot(tree.disc)
text(tree.disc, cex = 0.5)
discrimination.df$mothedu <- as.factor(discrimination.df$mothedu)
discrimination.df$fathedu <- as.factor(discrimination.df$fathedu)
tree.disc <- tree(caste ~ seenmaze + knowkids + read + land + moethedu + fathedu, discrimination.df, subset = disc.train.indices)
plot(tree.disc)
text(tree.disc, cex = 0.5)
tree.disc <- tree(caste ~ seenmaze + knowkids + read + land + mothedu + fathedu, discrimination.df, subset = disc.train.indices)
plot(tree.disc)
text(tree.disc, cex = 0.5)
plot(tree.carseats)
text(tree.carseats, cex = 0.5)
tree.disc <- tree(caste ~ seenmaze + knowkids + read + land + mothedu + fathedu,
discrimination.df, subset = disc.train.indices)
plot(tree.disc)
text(tree.disc, cex = 0.5)
disc.pred <- predict(tree.disc, discrimination.df[-disc.train.indices,], type = 'class')
table(disc.pred, discrimination.df[-disc.train.indices,])
disc.pred
disc.pred <- predict(tree.disc, discrimination.df[-disc.train.indices,'caste'], type = 'class')
table(disc.pred, discrimination.df[-disc.train.indices,'caste'])
disc.pred <- predict(tree.disc, discrimination.df[-disc.train.indices,'caste'], type = 'class')
discrimination.df <- read.dta('./../13.2/discrimination/mazedata1.dta')
discrimination.df$caste <- as.factor(discrimination.df$caste)
discrimination.df$mothedu <- as.factor(discrimination.df$mothedu)
discrimination.df$fathedu <- as.factor(discrimination.df$fathedu)
disc.train.indices <- sample(1:nrow(discrimination.df), nrow(discrimination.df) / 2, replace = FALSE)
tree.disc <- tree(caste ~ seenmaze + knowkids + read + land + mothedu + fathedu,
discrimination.df, subset = disc.train.indices)
plot(tree.disc)
text(tree.disc, cex = 0.5)
disc.pred <- predict(tree.disc, discrimination.df[-disc.train.indices,'caste'], type = 'class')
table(disc.pred, discrimination.df[-disc.train.indices,'caste'])
disc.pred
discrimination.df[-disc.train.indices,'caste']
size(discrimination.df[-disc.train.indices,'caste'])
discrimination.df$caste[-disc.train.indices]
disc.pred <- predict(tree.disc, discrimination.df$caste[-disc.train.indices], type = 'class')
table(disc.pred, discrimination.df$caste[-disc.train.indices])
tree.disc <- tree(caste ~ seenmaze + knowkids + read + land + mothedu + fathedu,
discrimination.df, subset = disc.train.indices)
plot(tree.disc)
text(tree.disc, cex = 0.5)
disc.pred <- predict(tree.disc, discrimination.df$caste[-disc.train.indices], type = 'class')
table(disc.pred, discrimination.df$caste[-disc.train.indices])
tree.disc <- tree(caste ~ read + land + mothedu + fathedu, # seenmaze + knowkids +
discrimination.df, subset = disc.train.indices)
plot(tree.disc)
text(tree.disc, cex = 0.5)
disc.pred <- predict(tree.disc, discrimination.df$caste[-disc.train.indices], type = 'class')
table(disc.pred, discrimination.df$caste[-disc.train.indices])
?tree
tree.disc <- tree(caste ~ seenmaze + knowkids +  read + land + mothedu + fathedu,
discrimination.df, subset = disc.train.indices)
plot(tree.disc)
text(tree.disc, cex = 0.5)
disc.pred <- predict(tree.disc, discrimination.df$caste[-disc.train.indices], type = 'class')
table(disc.pred, discrimination.df$caste[-disc.train.indices])
set.seed(1)
# Use Gaussian for regression problems, Bernoulli for classification
boost.disc <- gbm(caste ~ seenmaze + knowkids +  read + land + mothedu + fathedu,
data = discrimination.df[boston.train,],
distribution = "bernoulli", n.trees = 5000,
interaction.depth = 4)
summary(boost.disc)
library(gbm)
boost.disc <- gbm(caste ~ seenmaze + knowkids +  read + land + mothedu + fathedu,
data = discrimination.df[boston.train,],
distribution = "bernoulli", n.trees = 5000,
interaction.depth = 4)
boost.disc <- gbm(caste ~ seenmaze + knowkids +  read + land + mothedu + fathedu,
data = discrimination.df[disc.train.indices,],
distribution = "bernoulli", n.trees = 5000,
interaction.depth = 4)
boost.disc <- gbm(caste ~ seenmaze + knowkids +  read + land + mothedu + fathedu,
data = discrimination.df[disc.train.indices,],
#distribution = "bernoulli",
n.trees = 5000,
interaction.depth = 4)
summary(boost.disc)
source('~/projects/r/13.2/trees.R', echo=TRUE)
predict(boost.disc, newdata = discrimination.df[-disc.train.indices,], n.trees = 5000)
length(disc.pred)
predict(boost.disc, newdata = discrimination.df[-disc.train.indices,], n.trees = 5000, type='class')
predict(boost.disc, newdata = discrimination.df[-disc.train.indices,], n.trees = 5000, type='link')
predict(boost.disc, newdata = discrimination.df[-disc.train.indices,], n.trees = 5000, type='respons')
predict(boost.disc, newdata = discrimination.df[-disc.train.indices,], n.trees = 5000, type='response')
discrimination.df$is.brahmin <- discrimination.df$caste == 'brahmin'
discrimination.df$is.brahmin
disc.train.indices <- sample(1:nrow(discrimination.df), nrow(discrimination.df) / 2, replace = FALSE)
tree.disc <- tree(is.brahmin ~ seenmaze + knowkids +  read + land + mothedu + fathedu,
discrimination.df, subset = disc.train.indices)
plot(tree.disc)
text(tree.disc, cex = 0.5)
disc.pred <- predict(tree.disc, discrimination.df$is.brahmin[-disc.train.indices], type = 'class')
table(disc.pred, discrimination.df$is.brahmin[-disc.train.indices])
discrimination.df$is.brahmin <- ifelse(discrimination.df$caste == 'brahmin', 'brahmin', 'not brahmin')
discrimination.df$is.brahmin <- as.factor(ifelse(discrimination.df$caste == 'brahmin', 'brahmin', 'not brahmin'))
disc.train.indices <- sample(1:nrow(discrimination.df), nrow(discrimination.df) / 2, replace = FALSE)
tree.disc <- tree(is.brahmin ~ seenmaze + knowkids +  read + land + mothedu + fathedu,
discrimination.df, subset = disc.train.indices)
plot(tree.disc)
text(tree.disc, cex = 0.5)
disc.pred <- predict(tree.disc, discrimination.df$is.brahmin[-disc.train.indices], type = 'class')
table(disc.pred, discrimination.df$is.brahmin[-disc.train.indices])
tree.disc <- tree(is.brahmin ~ seenmaze + knowkids +  read + land + mothedu + fathedu,
discrimination.df, subset = disc.train.indices)
plot(tree.disc)
text(tree.disc, cex = 0.5)
disc.pred <- predict(tree.disc, discrimination.df$is.brahmin[-disc.train.indices], type = 'class')
disc.pred
discrimination.df <- read.dta('./../13.2/discrimination/mazedata1.dta')
discrimination.df$caste <- as.factor(discrimination.df$caste)
discrimination.df$is.brahmin <- as.factor(ifelse(discrimination.df$caste == 'brahmin', 'brahmin', 'not brahmin'))
discrimination.df$mothedu <- as.factor(discrimination.df$mothedu)
discrimination.df$fathedu <- as.factor(discrimination.df$fathedu)
disc.train.indices <- sample(1:nrow(discrimination.df), nrow(discrimination.df) / 2, replace = FALSE)
tree.disc <- tree(is.brahmin ~ seenmaze + knowkids +  read + land + mothedu + fathedu,
discrimination.df, subset = disc.train.indices)
plot(tree.disc)
text(tree.disc, cex = 0.5)
disc.pred <- predict(tree.disc, discrimination.df$is.brahmin[-disc.train.indices], type = 'class')
table(disc.pred, discrimination.df$is.brahmin[-disc.train.indices])
discrimination.df <- read.dta('./../13.2/discrimination/mazedata1.dta')
discrimination.df$caste <- as.factor(discrimination.df$caste)
discrimination.df$is.brahmin <- as.factor(ifelse(discrimination.df$caste == 'brahmin', 'brahmin', 'not brahmin'))
discrimination.df$mothedu <- as.factor(discrimination.df$mothedu)
discrimination.df$fathedu <- as.factor(discrimination.df$fathedu)
disc.train.indices <- sample(1:nrow(discrimination.df), nrow(discrimination.df) / 2, replace = FALSE)
tree.disc <- tree(is.brahmin ~ seenmaze + knowkids +  read + land + mothedu + fathedu,
discrimination.df[disc.train.indices,])
plot(tree.disc)
text(tree.disc, cex = 0.5)
disc.pred <- predict(tree.disc, discrimination.df$is.brahmin[-disc.train.indices], type = 'class')
table(disc.pred, discrimination.df$is.brahmin[-disc.train.indices])
discrimination.df <- read.dta('./../13.2/discrimination/mazedata1.dta')
discrimination.df$caste <- as.factor(discrimination.df$caste)
discrimination.df$brahmin <- as.factor(ifelse(discrimination.df$caste == 'brahmin', 'brahmin', 'not brahmin'))
discrimination.df$mothedu <- as.factor(discrimination.df$mothedu)
discrimination.df$fathedu <- as.factor(discrimination.df$fathedu)
disc.train.indices <- sample(1:nrow(discrimination.df), nrow(discrimination.df) / 2)
tree.disc <- tree(brahmin ~ seenmaze + knowkids +  read + land + mothedu + fathedu,
discrimination.df[disc.train.indices,])
plot(tree.disc)
text(tree.disc, cex = 0.5)
disc.pred <- predict(tree.disc, discrimination.df$brahmin[-disc.train.indices], type = 'class')
table(disc.pred, discrimination.df$brahmin[-disc.train.indices])
discrimination.df <- read.dta('./../13.2/discrimination/mazedata1.dta')
discrimination.df$caste <- as.factor(discrimination.df$caste)
discrimination.df$brahmin <- as.factor(ifelse(discrimination.df$caste == 'brahmin', 'brahmin', 'not brahmin'))
discrimination.df$mothedu.factor <- as.factor(discrimination.df$mothedu)
discrimination.df$fathedu.factor <- as.factor(discrimination.df$fathedu)
disc.train.indices <- sample(1:nrow(discrimination.df), nrow(discrimination.df) / 2)
tree.disc <- tree(brahmin ~ seenmaze + knowkids +  read + land + mothedu.factor + fathedu.factor,
discrimination.df[disc.train.indices,])
plot(tree.disc)
text(tree.disc, cex = 0.5)
disc.pred <- predict(tree.disc, discrimination.df$brahmin[-disc.train.indices], type = 'class')
table(disc.pred, discrimination.df$brahmin[-disc.train.indices])
attach(discrimination.df)
discrimination.df <- read.dta('./../13.2/discrimination/mazedata1.dta')
discrimination.df$caste <- as.factor(discrimination.df$caste)
discrimination.df$brahmin <- as.factor(ifelse(discrimination.df$caste == 'brahmin', 'brahmin', 'not brahmin'))
discrimination.df$mothedu.factor <- as.factor(discrimination.df$mothedu)
discrimination.df$fathedu.factor <- as.factor(discrimination.df$fathedu)
attach(discrimination.df)
disc.train.indices <- sample(1:nrow(discrimination.df), nrow(discrimination.df) / 2)
tree.disc <- tree(brahmin ~ seenmaze + knowkids +  read + land + mothedu.factor + fathedu.factor,
discrimination.df[disc.train.indices,])
plot(tree.disc)
text(tree.disc, cex = 0.5)
disc.pred <- predict(tree.disc, discrimination.df$brahmin[-disc.train.indices], type = 'class')
table(disc.pred, discrimination.df$brahmin[-disc.train.indices])
?attach
detach(discrimination.df)
detach(discrimination.df)
detach(discrimination.df)
detach(discrimination.df)
detach(discrimination.df)
detach(discrimination.df)
discrimination.df <- read.dta('./../13.2/discrimination/mazedata1.dta')
discrimination.df$caste <- as.factor(discrimination.df$caste)
discrimination.df$brahmin <- as.factor(ifelse(discrimination.df$caste == 'brahmin', 'brahmin', 'not brahmin'))
discrimination.df$mothedu.factor <- as.factor(discrimination.df$mothedu)
discrimination.df$fathedu.factor <- as.factor(discrimination.df$fathedu)
disc.train.indices <- sample(1:nrow(discrimination.df), nrow(discrimination.df) / 2)
tree.disc <- tree(brahmin ~ seenmaze + knowkids +  read + land + mothedu.factor + fathedu.factor,
discrimination.df[disc.train.indices,])
plot(tree.disc)
text(tree.disc, cex = 0.5)
disc.pred <- predict(tree.disc, discrimination.df$brahmin[-disc.train.indices], type = 'class')
table(disc.pred, discrimination.df$brahmin[-disc.train.indices])
tree.disc <- tree(as.formula('brahmin ~ seenmaze + knowkids +  read + land + mothedu.factor + fathedu.factor'),
discrimination.df[disc.train.indices,])
plot(tree.disc)
text(tree.disc, cex = 0.5)
disc.pred <- predict(tree.disc, discrimination.df$brahmin[-disc.train.indices], type = 'class')
table(disc.pred, discrimination.df$brahmin[-disc.train.indices])
tree.disc <- tree(brahmin ~ seenmaze + knowkids +  read + land +
mothedu.factor + fathedu.factor,
discrimination.df[disc.train.indices,])
plot(tree.disc)
text(tree.disc, cex = 0.5)
disc.pred <- predict(tree.disc, discrimination.df$brahmin[-disc.train.indices], type = 'class')
save.image("~/projects/r/un_policy/env.RData")
library(tree)
library(ISLR)
library(MASS)
library(randomForest)
library(gbm)
discrimination.df <- read.dta('./../13.2/discrimination/mazedata1.dta')
discrimination.df$caste <- as.factor(discrimination.df$caste)
discrimination.df$brahmin <- as.factor(ifelse(discrimination.df$caste == 'brahmin', 'brahmin', 'not brahmin'))
discrimination.df$mothedu.factor <- as.factor(discrimination.df$mothedu)
discrimination.df$fathedu.factor <- as.factor(discrimination.df$fathedu)
disc.train.indices <- sample(1:nrow(discrimination.df), nrow(discrimination.df) / 2)
tree.disc <- tree(brahmin ~ seenmaze + knowkids +  read + land +
mothedu.factor + fathedu.factor,
discrimination.df[disc.train.indices,])
plot(tree.disc)
text(tree.disc, cex = 0.5)
disc.pred <- predict(tree.disc, discrimination.df$brahmin[-disc.train.indices], type = 'class')
table(disc.pred, discrimination.df$brahmin[-disc.train.indices])
disc.pred <- predict(tree.disc, discrimination.df[-disc.train.indices], type = 'class')
disc.pred <- predict(tree.disc, discrimination.df[-disc.train.indices], type = 'class')
disc.pred <- predict(tree.disc, discrimination.df[-disc.train.indices], type = 'class')
discrimination.df <- read.dta('./../13.2/discrimination/mazedata1.dta')
discrimination.df$caste <- as.factor(discrimination.df$caste)
discrimination.df$brahmin <- as.factor(ifelse(discrimination.df$caste == 'brahmin', 'brahmin', 'not brahmin'))
discrimination.df$mothedu.factor <- as.factor(discrimination.df$mothedu)
discrimination.df$fathedu.factor <- as.factor(discrimination.df$fathedu)
disc.train.indices <- sample(1:nrow(discrimination.df), nrow(discrimination.df) / 2)
tree.disc <- tree(brahmin ~ seenmaze + knowkids + read + land +
mothedu.factor + fathedu.factor,
discrimination.df[disc.train.indices,])
plot(tree.disc)
text(tree.disc, cex = 0.5)
disc.pred <- predict(tree.disc, discrimination.df[-disc.train.indices], type = 'class')
discrimination.df <- read.dta('./../13.2/discrimination/mazedata1.dta')
discrimination.df$caste <- as.factor(discrimination.df$caste)
discrimination.df$brahmin <- as.factor(ifelse(discrimination.df$caste == 'brahmin', 'brahmin', 'not brahmin'))
discrimination.df$mothedu.factor <- as.factor(discrimination.df$mothedu)
discrimination.df$fathedu.factor <- as.factor(discrimination.df$fathedu)
disc.train.indices <- sample(1:nrow(discrimination.df), nrow(discrimination.df) / 2)
tree.disc <- tree(brahmin ~ seenmaze + knowkids + read + land +
mothedu.factor + fathedu.factor,
discrimination.df[disc.train.indices,])
plot(tree.disc)
text(tree.disc, cex = 0.5)
disc.pred <- predict(tree.disc, discrimination.df[-disc.train.indices], type = 'class')
discrimination.df <- read.dta('./../13.2/discrimination/mazedata1.dta')
discrimination.df$caste <- as.factor(discrimination.df$caste)
discrimination.df$brahmin <- as.factor(ifelse(discrimination.df$caste == 'brahmin', 'brahmin', 'not brahmin'))
discrimination.df$mothedu.factor <- as.factor(discrimination.df$mothedu)
discrimination.df$fathedu.factor <- as.factor(discrimination.df$fathedu)
disc.train.indices <- sample(1:nrow(discrimination.df), nrow(discrimination.df) / 2)
tree.disc <- tree(brahmin ~ seenmaze + knowkids + read + land +
mothedu.factor + fathedu.factor,
discrimination.df[disc.train.indices,])
plot(tree.disc)
text(tree.disc, cex = 0.5)
disc.pred <- predict(tree.disc, discrimination.df[-disc.train.indices], type = 'class')
discrimination.df <- read.dta('./../13.2/discrimination/mazedata1.dta')
discrimination.df$caste <- as.factor(discrimination.df$caste)
discrimination.df$brahmin <- as.factor(ifelse(discrimination.df$caste == 'brahmin', 'brahmin', 'not brahmin'))
discrimination.df$mothedu.factor <- as.factor(discrimination.df$mothedu)
discrimination.df$fathedu.factor <- as.factor(discrimination.df$fathedu)
attach(discrimination.df)
disc.train.indices <- sample(1:nrow(discrimination.df), nrow(discrimination.df) / 2)
tree.disc <- tree(brahmin ~ seenmaze + knowkids + read + land +
mothedu.factor + fathedu.factor,
discrimination.df[disc.train.indices,])
plot(tree.disc)
text(tree.disc, cex = 0.5)
disc.pred <- predict(tree.disc, discrimination.df[-disc.train.indices], type = 'class')
table(disc.pred, discrimination.df$brahmin[-disc.train.indices])
disc.pred
length(disc.pred)
nrow(discrimination.df[-disc.train.indices])
disc.pred <- predict(tree.disc, discrimination.df[-disc.train.indices,], type = 'class')
length(disc.pred)
table(disc.pred, discrimination.df$brahmin[-disc.train.indices])
set.seed(1)
# Use Gaussian for regression problems, Bernoulli for classification
boost.disc <- gbm(brahmin ~ seenmaze + knowkids +  read + land + mothedu + fathedu,
data = discrimination.df[disc.train.indices,],
distribution = "bernoulli",
n.trees = 5000,
interaction.depth = 4)
summary(boost.disc)
predict(boost.disc, newdata = discrimination.df[-disc.train.indices,], n.trees = 5000, type='response')
set.seed(1)
# Use Gaussian for regression problems, Bernoulli for classification
boost.disc <- gbm(brahmin ~ seenmaze + knowkids +  read + land + mothedu.factor + fathedu.factor,
data = discrimination.df[disc.train.indices,],
distribution = "bernoulli",
n.trees = 5000,
interaction.depth = 4)
summary(boost.disc)
predict(boost.disc, newdata = discrimination.df[-disc.train.indices,], n.trees = 5000, type='response')
discrimination.df <- read.dta('./../13.2/discrimination/mazedata1.dta')
discrimination.df$caste <- as.factor(discrimination.df$caste)
discrimination.df$brahmin <- ifelse(discrimination.df$caste == 'brahmin', 1, 0)
discrimination.df$mothedu.factor <- as.factor(discrimination.df$mothedu)
discrimination.df$fathedu.factor <- as.factor(discrimination.df$fathedu)
attach(discrimination.df)
disc.train.indices <- sample(1:nrow(discrimination.df), nrow(discrimination.df) / 2)
tree.disc <- tree(brahmin ~ seenmaze + knowkids + read + land +
mothedu.factor + fathedu.factor,
discrimination.df[disc.train.indices,])
plot(tree.disc)
text(tree.disc, cex = 0.5)
disc.pred <- predict(tree.disc, discrimination.df[-disc.train.indices,], type = 'class')
table(disc.pred, discrimination.df$brahmin[-disc.train.indices])
library(gbm)
set.seed(1)
# Use Gaussian for regression problems, Bernoulli for classification
boost.disc <- gbm(brahmin ~ seenmaze + knowkids +  read + land + mothedu.factor + fathedu.factor,
data = discrimination.df[disc.train.indices,],
distribution = "bernoulli",
n.trees = 5000,
interaction.depth = 4)
summary(boost.disc)
predict(boost.disc, newdata = discrimination.df[-disc.train.indices,], n.trees = 5000, type='response')
ifelse(predict(boost.disc, newdata = discrimination.df[-disc.train.indices,], n.trees = 5000, type='response') > 0.5, 1, 0)
boost.pred <- ifelse(predict(boost.disc, newdata = discrimination.df[-disc.train.indices,], n.trees = 5000, type='response') > 0.5, 1, 0)
table(boost.pred, discrimination.df$brahmin[-disc.train.indices])
table(disc.pred, discrimination.df$brahmin[-disc.train.indices])
disc.train.indices <- sample(1:nrow(discrimination.df), nrow(discrimination.df) / 2)
tree.disc <- tree(brahmin ~ seenmaze + knowkids + read + land +
mothedu.factor + fathedu.factor,
discrimination.df[disc.train.indices,])
plot(tree.disc)
text(tree.disc, cex = 0.5)
disc.pred <- predict(tree.disc, discrimination.df[-disc.train.indices,], type = 'class')
table(disc.pred, discrimination.df$brahmin[-disc.train.indices])
length(disc.pred)
discrimination.df$brahmin.factor <- as.factor(ifelse(discrimination.df$caste == 'brahmin', 1, 0))
attach(discrimination.df)
tree.disc <- tree(brahmin.facor ~ seenmaze + knowkids + read + land +
mothedu.factor + fathedu.factor,
discrimination.df[disc.train.indices,])
plot(tree.disc)
text(tree.disc, cex = 0.5)
disc.pred <- predict(tree.disc, discrimination.df[-disc.train.indices,], type = 'class')
table(disc.pred, discrimination.df$brahmin[-disc.train.indices])
table(disc.pred, discrimination.df$brahmin.factor[-disc.train.indices])
discrimination.df <- read.dta('./../13.2/discrimination/mazedata1.dta')
discrimination.df$caste <- as.factor(discrimination.df$caste)
discrimination.df$brahmin <- ifelse(discrimination.df$caste == 'brahmin', 1, 0)
discrimination.df$brahmin.factor <- as.factor(ifelse(discrimination.df$caste == 'brahmin', 1, 0))
discrimination.df$mothedu.factor <- as.factor(discrimination.df$mothedu)
discrimination.df$fathedu.factor <- as.factor(discrimination.df$fathedu)
attach(discrimination.df)
disc.train.indices <- sample(1:nrow(discrimination.df), nrow(discrimination.df) / 2)
tree.disc <- tree(brahmin.facor ~ seenmaze + knowkids + read + land +
mothedu.factor + fathedu.factor,
discrimination.df[disc.train.indices,])
plot(tree.disc)
text(tree.disc, cex = 0.5)
disc.pred <- predict(tree.disc, discrimination.df[-disc.train.indices,], type = 'class')
table(disc.pred, discrimination.df$brahmin.factor[-disc.train.indices])
tree.disc <- tree(brahmin.factor ~ seenmaze + knowkids + read + land +
mothedu.factor + fathedu.factor,
discrimination.df[disc.train.indices,])
plot(tree.disc)
text(tree.disc, cex = 0.5)
disc.pred <- predict(tree.disc, discrimination.df[-disc.train.indices,], type = 'class')
table(disc.pred, discrimination.df$brahmin.factor[-disc.train.indices])
boost.disc <- gbm(brahmin ~ seenmaze + knowkids +  read + land + mothedu.factor + fathedu.factor,
data = discrimination.df[disc.train.indices,],
distribution = "bernoulli",
n.trees = 5000,
interaction.depth = 4)
summary(boost.disc)
boost.pred <- ifelse(predict(boost.disc, newdata = discrimination.df[-disc.train.indices,], n.trees = 5000, type='response') > 0.5, 1, 0)
table(boost.pred, discrimination.df$brahmin[-disc.train.indices])
boost.disc <- gbm(brahmin ~ seenmaze + knowkids +  read + land + mothedu.factor + fathedu.factor,
data = discrimination.df[disc.train.indices,],
distribution = "bernoulli",
n.trees = 5000,
interaction.depth = 4,
shrinkage = 0.1)
summary(boost.disc)
boost.pred <- ifelse(predict(boost.disc, newdata = discrimination.df[-disc.train.indices,], n.trees = 5000, type='response') > 0.5, 1, 0)
table(boost.pred, discrimination.df$brahmin[-disc.train.indices])
boost.disc <- gbm(brahmin ~ seenmaze + knowkids +  read + land + mothedu.factor + fathedu.factor,
data = discrimination.df[disc.train.indices,],
distribution = "bernoulli",
n.trees = 5000,
interaction.depth = 4,
shrinkage = 0.0001)
summary(boost.disc)
boost.pred <- ifelse(predict(boost.disc, newdata = discrimination.df[-disc.train.indices,], n.trees = 5000, type='response') > 0.5, 1, 0)
table(boost.pred, discrimination.df$brahmin[-disc.train.indices])
boost.disc <- gbm(brahmin ~ seenmaze + knowkids +  read + land + mothedu.factor + fathedu.factor,
data = discrimination.df[disc.train.indices,],
distribution = "bernoulli",
n.trees = 5000,
interaction.depth = 4,
shrinkage = 0.001)
summary(boost.disc)
boost.pred <- ifelse(predict(boost.disc, newdata = discrimination.df[-disc.train.indices,], n.trees = 5000, type='response') > 0.5, 1, 0)
table(boost.pred, discrimination.df$brahmin[-disc.train.indices])
discrimination.df$mothedu.numeric <- as.numeric(discrimination.df$mothedu)
discrimination.df$fathedu.numeric <- as.numeric(discrimination.df$fathedu)
attach(discrimination.df)
tree.disc <- tree(brahmin.factor ~ seenmaze + knowkids + read + land +
mothedu.factor + fathedu.factor + mothedu.numeric + fathedu.numeric,
discrimination.df[disc.train.indices,])
plot(tree.disc)
text(tree.disc, cex = 0.5)
tree.disc <- tree(brahmin.factor ~ seenmaze + knowkids + read + land +
mothedu.numeric + fathedu.numeric,
discrimination.df[disc.train.indices,])
plot(tree.disc)
text(tree.disc, cex = 0.5)
disc.pred <- predict(tree.disc, discrimination.df[-disc.train.indices,], type = 'class')
table(disc.pred, discrimination.df$brahmin.factor[-disc.train.indices])
boost.disc <- gbm(brahmin ~ seenmaze + knowkids +  read + land + mothedu.numeric + fathedu.numeric,
data = discrimination.df[disc.train.indices,],
distribution = "bernoulli",
n.trees = 5000,
interaction.depth = 4,
shrinkage = 0.001)
summary(boost.disc)
boost.pred <- ifelse(predict(boost.disc, newdata = discrimination.df[-disc.train.indices,], n.trees = 5000, type='response') > 0.5, 1, 0)
table(boost.pred, discrimination.df$brahmin[-disc.train.indices])
set.seed(1)
# Use Gaussian for regression problems, Bernoulli for classification
boost.disc <- gbm(brahmin ~ seenmaze + knowkids +  read + land + mothedu.numeric + fathedu.numeric,
data = discrimination.df[disc.train.indices,],
distribution = "bernoulli",
n.trees = 5000,
interaction.depth = 4,
shrinkage = 0.01)
summary(boost.disc)
boost.pred <- ifelse(predict(boost.disc, newdata = discrimination.df[-disc.train.indices,], n.trees = 5000, type='response') > 0.5, 1, 0)
table(boost.pred, discrimination.df$brahmin[-disc.train.indices])
